/users/register:
  post:
    tags: [Users]
    summary: Register a new user
    description: Creates a new user account and returns access and refresh tokens.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/RegisterReqBody.yaml'
    responses:
      '200':
        description: Registration successful, tokens returned.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/AuthSuccessResponse.yaml'
      '422':
        description: Validation error (e.g., email exists, password mismatch).
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorValidationResponse.yaml'
      '500':
        description: Internal server error.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorServerResponse.yaml'

/users/login:
  post:
    tags: [Users]
    summary: Log in an existing user
    description: Authenticates a user and returns access and refresh tokens.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/LoginReqBody.yaml'
    responses:
      '200':
        description: Login successful, tokens returned.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/AuthSuccessResponse.yaml'
      '422':
        description: Validation error (e.g., incorrect email/password).
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorValidationResponse.yaml'
      '500':
        description: Internal server error.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorServerResponse.yaml'

/users/forgot-password:
  post:
    tags: [Users]
    summary: Request a password reset token
    description: Sends a password reset token to the user's email.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/ForgotPasswordReqBody.yaml'
    responses:
      '200':
        description: Forgot password request acknowledged.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/MessageResponse.yaml'
      '404':
        description: User with the provided email not found.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorStatusResponse.yaml'
      '422':
        description: Validation error (e.g., email format incorrect).
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorValidationResponse.yaml'
      '500':
        description: Internal server error.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorServerResponse.yaml'

/users/verify-forgot-password:
  post:
    tags: [Users]
    summary: Verify the forgot password token
    description: Checks if the provided forgot password token is valid.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/VerifyForgotPasswordTokenReqBody.yaml'
    responses:
      '200':
        description: Token verification successful.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/MessageResponse.yaml'
      '401':
        description: Unauthorized (e.g., token is invalid, expired, or incorrect).
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorStatusResponse.yaml'
      '404':
        description: User associated with the token not found.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorStatusResponse.yaml'
      '500':
        description: Internal server error.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorServerResponse.yaml'

/users/reset-password:
  post:
    tags: [Users]
    summary: Reset the user's password
    description: Sets a new password for the user using a valid forgot password token.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/ResetPasswordReqBody.yaml'
    responses:
      '200':
        description: Password reset successful.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/MessageResponse.yaml'
      '401':
        description: Unauthorized (e.g., forgot password token is invalid or incorrect).
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorStatusResponse.yaml'
      '404':
        description: User not found for the token.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorStatusResponse.yaml'
      '422':
        description: Validation error (e.g., password format, passwords don't match).
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorValidationResponse.yaml'
      '500':
        description: Internal server error.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorServerResponse.yaml'

/users/verify-email:
  post:
    tags: [Users]
    summary: Verify user's email address
    description: Verifies the user's email using the provided email verification token and returns new tokens.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/VerifyEmailReqBody.yaml'
    responses:
      '200':
        description: Email verification status.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '../components/schemas/AuthSuccessResponse.yaml'
                - $ref: '../components/schemas/MessageResponse.yaml'
      '401':
        description: Unauthorized (e.g., email verify token is incorrect, invalid or required).
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorStatusResponse.yaml'
      '404':
        description: User not found.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorStatusResponse.yaml'
      '500':
        description: Internal server error.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorServerResponse.yaml'

/users/resend-verify-email:
  post:
    tags: [Users]
    summary: Resend email verification token
    description: Resends a new email verification token to the authenticated user's email address. Requires Bearer token authentication.
    security:
      - BearerAuth: []
    responses:
      '200':
        description: Resend email verification status.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/MessageResponse.yaml'
      '401':
        description: Unauthorized.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorStatusResponse.yaml'
      '403':
        description: Forbidden (e.g., user is banned).
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorStatusResponse.yaml'
      '404':
        description: User not found.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorStatusResponse.yaml'
      '500':
        description: Internal server error.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorServerResponse.yaml'

/users/change-password:
  put:
    tags: [Users]
    summary: Change password
    description: Allows an authenticated and verified user to change their password.
    security:
      - BearerAuth: []
    requestBody:
      description: User's old password and new password information.
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/ChangePasswordReqBody.yaml'
    responses:
      '200':
        description: Change password successful.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/MessageResponse.yaml'
      '401':
        description: Unauthorized.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorStatusResponse.yaml'
      '403':
        description: Forbidden. The user has not verified their email address yet.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorStatusResponse.yaml'
      '422':
        description: Unprocessable Entity. The request body is invalid.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorValidationResponse.yaml'
      '500':
        description: Internal server error.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorServerResponse.yaml'

/users/logout:
  post:
    tags: [Users]
    summary: Logout a user
    description: >
      Logs out an authenticated user by invalidating their refresh token.
      Requires both a valid Access Token in the Authorization header and the Refresh Token in the body.
    security:
      - BearerAuth: []
    requestBody:
      description: The refresh token to be invalidated.
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/LogoutReqBody.yaml'
    responses:
      '200':
        description: Logout successful. The refresh token has been invalidated.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/MessageResponse.yaml'
      '401':
        description: >
          Unauthorized. This can occur for several reasons:
          - The Access Token in the Authorization header is missing, invalid, or expired.
          - The Refresh Token provided in the body is invalid, expired, or does not exist in the database.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorStatusResponse.yaml'
      '422':
        description: Unprocessable Entity. The request body is missing the required `refresh_token` field.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorValidationResponse.yaml'
      '500':
        description: Internal server error.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorServerResponse.yaml'

/users/me:
  get:
    tags: [Users]
    summary: Get current user's profile
    description: >
      Retrieves the profile information of the currently authenticated user based on the provided Access Token.
      The returned user object will not contain sensitive fields like 'password' or 'tokens'.
    security:
      - BearerAuth: []
    responses:
      '200':
        description: Successfully retrieved user profile.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/GetMeSuccessResponse.yaml'
      '401':
        description: Unauthorized. The Access Token is missing, invalid, or expired.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorStatusResponse.yaml'
      '500':
        description: Internal server error.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorServerResponse.yaml'

  patch:
    tags: [Users]
    summary: Update current user's profile
    description: >
      Partially updates the profile information of the currently authenticated user.
      Only include the fields you want to change in the request body.
    security:
      - BearerAuth: []
    requestBody:
      description: The fields to update in the user's profile. All fields are optional.
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/UpdateMeReqBody.yaml'
    responses:
      '200':
        description: Profile updated successfully. Returns the updated user object.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/GetMeSuccessResponse.yaml'
      '401':
        description: Unauthorized. The Access Token is missing, invalid, or expired.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorStatusResponse.yaml'
      '422':
        description: Unprocessable Entity. The request body contains invalid data (e.g., username already exists, invalid format).
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorValidationResponse.yaml'
      '500':
        description: Internal server error.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorServerResponse.yaml'

/users/refresh-token:
  post:
    tags: [Users]
    summary: Refresh user's access token
    description: >
      Provides a new access token and a new refresh token in exchange for a valid, unexpired refresh token.
      This endpoint does not require Bearer authentication via an access token.
    requestBody:
      description: A valid refresh token.
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/RefreshTokenReqBody.yaml'
    responses:
      '200':
        description: Tokens refreshed successfully.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/RefreshTokenSuccessResponse.yaml'
      '401':
        description: Unauthorized. The provided refresh token is invalid, expired, or was not found in the database.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorStatusResponse.yaml'
      '422':
        description: Unprocessable Entity. The request body is missing the required `refresh_token` field.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorValidationResponse.yaml'
      '500':
        description: Internal server error.
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ErrorServerResponse.yaml'

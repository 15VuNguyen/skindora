networks:
  traefik-public:
    driver: bridge
  portainer-network:
    driver: bridge
  redis-network:
    driver: bridge
volumes:
  portainer_data:
  redis_data:
services:
  traefik:
    image: traefik:v3.4.1
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - traefik-public
    ports:
      - "80:80"
      - "443:443/tcp"
      - "443:443/udp"
    environment:
      - CF_API_EMAIL=${CF_API_EMAIL}
      - CLOUDFLARE_DNS_API_TOKEN=${CLOUDFLARE_DNS_API_TOKEN}
      - TRAEFIK_DASHBOARD_USERS=${TRAEFIK_DASHBOARD_USERS}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/etc/traefik
      - ./traefik/config.yaml:/etc/traefik/traefik.yaml:ro
      - ./traefik/logs:/var/log/traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`${TRAEFIK_DASHBOARD_HOST}`)"
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.tls.certresolver=default"
      - "traefik.http.routers.traefik-dashboard.middlewares=dashboard-auth"
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=${TRAEFIK_DASHBOARD_USERS}"
  frontend:
    build:
      context: ./frontend
      dockerfile: dockerfile 
      args:
        - VITE_API_BASE_URL=${VITE_API_BASE_URL}
        - VITE_SENTRY_DSN_FRONTEND=${VITE_SENTRY_DSN_FRONTEND}
        - VITE_GOOGLE_CLIENT_ID=${VITE_GOOGLE_CLIENT_ID}
        - VITE_GOOGLE_REDIRECT_URI=${VITE_GOOGLE_REDIRECT_URI}
    volumes:
      - ./uploads:/srv/uploads
    networks:
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${FRONTEND_HOST}`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certresolver=default"
      - "traefik.http.routers.frontend.tls.domains[0].main=`${APEX_DOMAIN}`"
      - "traefik.http.routers.frontend.tls.domains[0].sans=*.`${APEX_DOMAIN}`"
      - "traefik.http.services.frontend-service.loadbalancer.server.port=80"
  backend:
    build:
      context: ./backend
      dockerfile: dockerfile
      args:
      - APP_PORT=${PORT:-4000}
    volumes:
      - ./uploads:/srv/uploads
    networks:
      - redis-network
      - traefik-public
    depends_on:
      - redis
    environment:
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_USERS_COLLECTION=${DB_USERS_COLLECTION}
      - DB_PRODUCTS_COLLECTION=${DB_PRODUCTS_COLLECTION}
      - DB_ORDERS_COLLECTION=${DB_ORDERS_COLLECTION}
      - DB_ORDER_DETAIL_COLLECTION=${DB_ORDER_DETAIL_COLLECTION}
      - DB_REFRESH_TOKENS_COLLECTION=${DB_REFRESH_TOKENS_COLLECTION}
      - PASSWORD_SECRET=${PASSWORD_SECRET}
      - JWT_SECRET_EMAIL_VERIFY_TOKEN=${JWT_SECRET_EMAIL_VERIFY_TOKEN}
      - JWT_SECRET_ACCESS_TOKEN=${JWT_SECRET_ACCESS_TOKEN}
      - JWT_SECRET_REFRESH_TOKEN=${JWT_SECRET_REFRESH_TOKEN}
      - JWT_SECRET_FORGOT_PASSWORD_TOKEN=${JWT_SECRET_FORGOT_PASSWORD_TOKEN}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - CLIENT_REDIRECT_CALLBACK_LOGIN_GOOGLE=${CLIENT_REDIRECT_CALLBACK_LOGIN_GOOGLE}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
      - ACCESS_TOKEN_EXPIRE_IN=${ACCESS_TOKEN_EXPIRE_IN}
      - EMAIL_VERIFY_TOKEN_EXPIRE_IN=${EMAIL_VERIFY_TOKEN_EXPIRE_IN}
      - REFRESH_TOKEN_EXPIRE_IN=${REFRESH_TOKEN_EXPIRE_IN}
      - ACCOUNT_SID=${ACCOUNT_SID}
      - AUTH_TOKEN=${AUTH_TOKEN}
      - TWILIO_PHONE=${TWILIO_PHONE}
      - PORT=${PORT:-4000}
      - HOST_NAME=${HOST_NAME}
      - HOST_REDIS_PORT=${HOST_REDIS_PORT}
      - HOST_PASSWORD=${HOST_PASSWORD}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - FRONTEND_URL=${FRONTEND_URL}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${BACKEND_HOST}`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certresolver=default"
      - "traefik.http.services.backend-service.loadbalancer.server.port=${PORT:-4000}"
      - "traefik.docker.network=traefik-public"
  portainer:
    image: portainer/portainer-ce:2.30.1-alpine
    restart: unless-stopped
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - portainer-network
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`${PORTAINER_HOST}`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls.certresolver=default"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.docker.network=traefik-public"
    depends_on:
      - traefik

  redis:
    image: redis:8.0-alpine
    container_name: my-redis-container
    volumes:
      - redis_data:/data
      - ./redis-logs:/var/log/redis
    command: >
      redis-server
      --appendonly yes
      --requirepass ${REDIS_PASSWORD}
      --port 6379
    networks:
      - redis-network
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.redis-tcp.entrypoints=websecure"
    depends_on:
      - traefik
